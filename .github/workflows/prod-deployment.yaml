name: Production Deployment

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  IMAGE_NAME: core-ds-transaction-scoring
  APP_REPO_PATH: ditio/core-ds-transaction-scoring/overlays/prod
  ENVIRONMENT: prod

jobs:
  build:
    name: Build container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{raw}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ env.ENVIRONMENT }}-cache
          cache-to: type=registry,mode=max,ref=${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ env.ENVIRONMENT }}-cache

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT }}
          repository: ditioas/k8s-app-masshaul-configurations
          event-type: new-image
          client-payload: '{"image": "${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}", "release": "${{ env.IMAGE_NAME }}@${{ steps.meta.outputs.version }}", "path": "${{ env.APP_REPO_PATH }}"}'
